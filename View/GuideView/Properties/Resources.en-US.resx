<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Above" xml:space="preserve">
    <value>Above 50 Years Old:</value>
  </data>
  <data name="Accept" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="AccountDetails" xml:space="preserve">
    <value>Account Details</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddTourCheckpointInfo" xml:space="preserve">
    <value>if you want to delete a checkpoint, select it and press the remove button</value>
  </data>
  <data name="AddTourDateInfo" xml:space="preserve">
    <value>if you want to delete the date, select it and press the remove button</value>
  </data>
  <data name="AddTourImageInfo" xml:space="preserve">
    <value>if you want to delete the image, select it and press the remove button</value>
  </data>
  <data name="Age" xml:space="preserve">
    <value>Age:</value>
  </data>
  <data name="AllTours" xml:space="preserve">
    <value>All Tours</value>
  </data>
  <data name="BasicInfo" xml:space="preserve">
    <value>Basic Info</value>
  </data>
  <data name="Below" xml:space="preserve">
    <value>Below 18 Years Old:</value>
  </data>
  <data name="Between" xml:space="preserve">
    <value>Between 18 and 50 Years Old:</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CancelTourClick" xml:space="preserve">
    <value>Cancel Tour</value>
  </data>
  <data name="Capacity" xml:space="preserve">
    <value>Capacity:</value>
  </data>
  <data name="Checkpoint" xml:space="preserve">
    <value>Checkpoint:</value>
  </data>
  <data name="Checkpoints" xml:space="preserve">
    <value>Checkpoints</value>
  </data>
  <data name="CheckpointTableInfo" xml:space="preserve">
    <value>The table below contains a list of all checkpoints.Greyed out checkpoints represent checkpoints that have been completed</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Comment:</value>
  </data>
  <data name="ComplexRequests" xml:space="preserve">
    <value>Complex Requests</value>
  </data>
  <data name="ComplexTourRequest" xml:space="preserve">
    <value>Complex Request</value>
  </data>
  <data name="ComplexTourRequests" xml:space="preserve">
    <value>Complex Requests</value>
  </data>
  <data name="CreateRequestedTour" xml:space="preserve">
    <value>Create Requested Tour</value>
  </data>
  <data name="CreateTour" xml:space="preserve">
    <value>Create Tour</value>
  </data>
  <data name="CurrentCheckpoint" xml:space="preserve">
    <value>Current Checkpoint:</value>
  </data>
  <data name="DarkTheme" xml:space="preserve">
    <value>Dark Theme</value>
  </data>
  <data name="DateIcon" xml:space="preserve">
    <value>date</value>
  </data>
  <data name="Dates" xml:space="preserve">
    <value>Dates</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="DescriptionIcon" xml:space="preserve">
    <value>description</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Duration" xml:space="preserve">
    <value>Duration:</value>
  </data>
  <data name="EndTour" xml:space="preserve">
    <value>End Tour</value>
  </data>
  <data name="FinishedTours" xml:space="preserve">
    <value>Finished Tours</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>Name:</value>
  </data>
  <data name="FirstNameIcon" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="GenerateStatistics" xml:space="preserve">
    <value>Generate Statistics</value>
  </data>
  <data name="GoBack" xml:space="preserve">
    <value>Go Back</value>
  </data>
  <data name="Grade" xml:space="preserve">
    <value>Grade:</value>
  </data>
  <data name="Guide" xml:space="preserve">
    <value>Guide</value>
  </data>
  <data name="GuideRankMainPage" xml:space="preserve">
    <value />
  </data>
  <data name="GuidesKnowledge" xml:space="preserve">
    <value>Guide's knowledge:</value>
  </data>
  <data name="Hey" xml:space="preserve">
    <value>Hey</value>
  </data>
  <data name="Images" xml:space="preserve">
    <value>Images</value>
  </data>
  <data name="ImportantNotice" xml:space="preserve">
    <value>important notice</value>
  </data>
  <data name="Invalid" xml:space="preserve">
    <value>Invalid</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language:</value>
  </data>
  <data name="LanguageIcon" xml:space="preserve">
    <value>language</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Surname:</value>
  </data>
  <data name="LastNameIcon" xml:space="preserve">
    <value>surname</value>
  </data>
  <data name="LightTheme" xml:space="preserve">
    <value>Light Theme</value>
  </data>
  <data name="LiveTourClick" xml:space="preserve">
    <value>Tracking Menu</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Location:</value>
  </data>
  <data name="LocationIcon" xml:space="preserve">
    <value>location</value>
  </data>
  <data name="Media" xml:space="preserve">
    <value>Images</value>
  </data>
  <data name="MoreInfoClick" xml:space="preserve">
    <value>More information</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name:</value>
  </data>
  <data name="NextCheckpoint" xml:space="preserve">
    <value>Next Checkpoint</value>
  </data>
  <data name="NumberOfFinishedTours" xml:space="preserve">
    <value>Number of Tours: </value>
  </data>
  <data name="NumberOfTourists" xml:space="preserve">
    <value>Number of Tourists:</value>
  </data>
  <data name="OngoingTourMessage" xml:space="preserve">
    <value>, you have one tour that is still running, you can't start other tours until the previous tour is finished</value>
  </data>
  <data name="OtherTours" xml:space="preserve">
    <value>Other Tours</value>
  </data>
  <data name="OverallStats" xml:space="preserve">
    <value>Overall Statistics</value>
  </data>
  <data name="ParamsInfo" xml:space="preserve">
    <value>Choose parameters and press search button</value>
  </data>
  <data name="People" xml:space="preserve">
    <value>people</value>
  </data>
  <data name="QuitJob" xml:space="preserve">
    <value>Quit Job</value>
  </data>
  <data name="Rank" xml:space="preserve">
    <value>Rank: </value>
  </data>
  <data name="Realisation" xml:space="preserve">
    <value>Realisation: </value>
  </data>
  <data name="Recommended" xml:space="preserve">
    <value>Recommended:</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Requests" xml:space="preserve">
    <value>Requests</value>
  </data>
  <data name="ResetFilter" xml:space="preserve">
    <value>Restart Filter</value>
  </data>
  <data name="Reviews" xml:space="preserve">
    <value>Reviews</value>
  </data>
  <data name="ReviewShowClick" xml:space="preserve">
    <value>Check all reviews</value>
  </data>
  <data name="Schedule" xml:space="preserve">
    <value>Realisation</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SegmentNumber" xml:space="preserve">
    <value>segment number</value>
  </data>
  <data name="SpokenLanguage" xml:space="preserve">
    <value>Guide's spoken language: </value>
  </data>
  <data name="StartTourClick" xml:space="preserve">
    <value>Start the Tour</value>
  </data>
  <data name="Statistics" xml:space="preserve">
    <value>Statistics</value>
  </data>
  <data name="SuperGuide" xml:space="preserve">
    <value>Super Guide</value>
  </data>
  <data name="Test" xml:space="preserve">
    <value>tset</value>
  </data>
  <data name="Theme" xml:space="preserve">
    <value>Theme:</value>
  </data>
  <data name="TheMostVisitedTour" xml:space="preserve">
    <value>The Most Visited Tour</value>
  </data>
  <data name="TodaysTours" xml:space="preserve">
    <value>Today's Tours</value>
  </data>
  <data name="TourAttractions" xml:space="preserve">
    <value>Tour's attraction: </value>
  </data>
  <data name="TourFragments" xml:space="preserve">
    <value>Tour Fragments</value>
  </data>
  <data name="TouristEvidence" xml:space="preserve">
    <value>Tourist Evidence</value>
  </data>
  <data name="TouristNumber" xml:space="preserve">
    <value>Current Tourist Number</value>
  </data>
  <data name="Tourists" xml:space="preserve">
    <value>Tourists</value>
  </data>
  <data name="TouristsIcon" xml:space="preserve">
    <value>tourists</value>
  </data>
  <data name="TouristTableInfo" xml:space="preserve">
    <value>Select tourist who have appeared at the current checkpoint, if no one have appeared, press the next checkpoint</value>
  </data>
  <data name="TourRealisationDate" xml:space="preserve">
    <value>Realisation Date:</value>
  </data>
  <data name="TourRealisations" xml:space="preserve">
    <value>Realisation Dates:</value>
  </data>
  <data name="TourRequests" xml:space="preserve">
    <value>Tour Requests</value>
  </data>
  <data name="Tours" xml:space="preserve">
    <value>Tours</value>
  </data>
  <data name="Valid" xml:space="preserve">
    <value>Valid</value>
  </data>
  <data name="WebsiteLanguage" xml:space="preserve">
    <value>Website Language</value>
  </data>
  <data name="Year" xml:space="preserve">
    <value>Year</value>
  </data>
</root>